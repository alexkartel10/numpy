services:
  numpy:
    build: ./services/numpy
    restart: always
    volumes:
      - /numpyResults:/numpyResults
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 500M
        reservations:
          cpus: '0.05'
          memory: 50M 
    networks:
      - numpyNetwork
  cli_numpy:
    build: ./services/cli-numpy
    restart: always
    volumes:
      - /numpyResults:/numpyResults
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 500M
        reservations:
          cpus: '0.05'
          memory: 50M 
    command: plot 1 3 2 5 4 7 6 9 8 11 10 13 12 15 14 17 16 19 18 21 20 23 22 25 24 27 26 29 28 31 30 33 32 35 34 37 36 39 38 41 40 43 42 45 44 47 46 49 48 51 50 53 52 55 54 57 56 59 58 61 60 63 62 65 64 67 66 69 68 71 70 73 72 75 74 77 76 79 78 81 80 83 82 85 84 87 86 89 88 91 90 93 92 95 94 97 96 99 98 101 100; tail -f /dev/null 
    networks:
      - numpyNetwork
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - '9000:9000'
      - '9443:9443'
    restart: always
    volumes:
     - /numpyResults:/numpyResults
     - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 50M
        reservations:
          cpus: '0.05'
          memory: 50M
    networks:
      - numpyNetwork

networks:
  numpyNetwork:
    name: numpyNetwork
    # external: true #use if network was not created from this compose or in general it was not in the scope of this compose  

volumes:
  numpyResults:
    driver: local